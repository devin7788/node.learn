/**
 * fuhttp-ts 1.2.1 <https://github.com/fosenutvikling/fuHTTP-ts#readme>
 * Cors.js
 *
 * a HTTP-server written in TypeScript using Node.js
 *
 * Copyright (c) 2018 Jonas Kirkemyr, Fosen-Utvikling AS (http://fosen-utvikling.no), contributors
 * Licensed under the MIT license.
 */
 "use strict";
Object.defineProperty(exports, "__esModule", { value: true });
/**
 * Cors Middleware altering a http-response to include headers
 * for supporting CORS
 */
class Cors {
    /**
     * Creates an instance of Middleware.
     */
    constructor(options = { cookies: false, methods: null, maxage: 1 }) {
        this.options = options;
    }
    /**
     * Alters the response headers, by appending required headers and optional
     * for a browser to not allow a http-call
     */
    alter(req, res) {
        var origin;
        if (this.options.methods == null)
            this.options.methods = [req.method];
        origin =
            req.headers != null && req.headers.origin != null ? req.headers.origin : '*';
        res.setHeader('Access-Control-Allow-Origin', origin);
        if (this.options.methods != null)
            res.setHeader('Access-Control-Request-Method', this.options.methods.toString()); // Required, allowed methods for path
        if (this.options.cookies)
            // Optional, allows storing cookies
            res.setHeader('Access-Control-Allow-Credentials', 'true');
        if (this.options.maxage)
            // Optional, allows preflight response to be cached, preventing an OPTIONS request for each http-request
            res.setHeader('Access-Control-Max-Age', this.options.maxage.toString());
        return true;
    }
}
exports.Cors = Cors;
//# sourceMappingURL=Cors.js.map