/// <reference types="node" />
import * as http from 'http';
import { IMiddleware } from './IMiddleware';
import { HTTP_METHODS } from '../Route';
/**
 * Options possible for configuring the cors middleware
 */
export interface IOptions {
    /**
     * Whether  the allow-credentials header should be set, supporting the use of cookies with CORS
     */
    cookies?: boolean;
    /**
     * Supported http-methods for a route, defaults to current request method
     */
    methods?: HTTP_METHODS[];
    /**
     * How many seconds a response to be cached for CORS
     */
    maxage?: number;
}
/**
 * Cors Middleware altering a http-response to include headers
 * for supporting CORS
 */
export declare class Cors implements IMiddleware {
    private options;
    /**
     * Creates an instance of Middleware.
     */
    constructor(options?: IOptions);
    /**
     * Alters the response headers, by appending required headers and optional
     * for a browser to not allow a http-call
     */
    alter(req: http.IncomingMessage, res: http.ServerResponse): boolean;
}
