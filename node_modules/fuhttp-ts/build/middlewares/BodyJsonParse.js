/**
 * fuhttp-ts 1.2.1 <https://github.com/fosenutvikling/fuHTTP-ts#readme>
 * BodyJsonParse.js
 *
 * a HTTP-server written in TypeScript using Node.js
 *
 * Copyright (c) 2018 Jonas Kirkemyr, Fosen-Utvikling AS (http://fosen-utvikling.no), contributors
 * Licensed under the MIT license.
 */
 "use strict";
Object.defineProperty(exports, "__esModule", { value: true });
const querystring = require("querystring");
/**
 * Parse a http-request body to JSON
 */
class BodyJsonParse {
    /**
     * The middleware function doing the parsing of body data.
     * The content type of a request is checked for what type of parsing is required
     * eiter using plain JSON.parsing, or querystring
     *
     * @param req the http-request object
     * @param res the http-response object
     * @returns whether the parsing of body data succeeded or not
     */
    alter(req, res) {
        if (req.contentType === 'application/x-www-form-urlencode') {
            // Body is in url form (using & and = for denoting key-value pairs)
            try {
                req.body = querystring.parse(req.body);
            }
            catch (e) {
                req.emit('error', "Couldn't parse query body data to JSON");
                return false;
            }
        }
        else {
            try {
                req.body =
                    req.body == null || req.body === '' ? null : JSON.parse(req.body);
            }
            catch (e) {
                req.emit('error', "Couldn't parse body data to JSON");
                return false;
            }
        }
        return true;
    }
}
exports.BodyJsonParse = BodyJsonParse;
//# sourceMappingURL=BodyJsonParse.js.map